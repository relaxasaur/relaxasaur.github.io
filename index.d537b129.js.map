{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,S,E,E,SCyBA,MAAM,EAAS,SAAS,cAAc,CAAC,WACvC,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EArBP,WACI,GAAM,CAAC,EAAQ,EAAU,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,ECNZ,GDgBhB,OANI,GAAQ,MACR,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,OAAO,CAAG,EAChD,SAAS,cAAc,CAAC,QAAQ,SAAS,CAAG,IAK5C,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,MADL,C,S,CAEQ,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SAAD,CAAQ,GAAG,OAAO,SAAA,M,GAClB,AAAA,CAAA,EAAA,EAAA,IAAA,AAAA,EAAC,KAAD,C,S,CAAK,EAAO,gB,A,GACZ,AAAA,CAAA,EAAA,EAAA,GAAA,AAAA,EAAC,SAAD,CAAQ,GAAG,YAAY,QAb/B,WACI,EAAU,EAAO,EACrB,C,G,A,EAcJ,EAGQ,CAAA,GAAY","sources":["<anon>","Message.js","Points.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $aJa0n = parcelRequire(\"aJa0n\");\n\nvar $1Hdcz = parcelRequire(\"1Hdcz\");\n\nvar $2LSrt = parcelRequire(\"2LSrt\");\nconst $5d0025407b287384$var$cravePoints = 0;\nvar $5d0025407b287384$export$2e2bcd8739ae039 = $5d0025407b287384$var$cravePoints;\n\n\nfunction $af3605b1a17ae057$var$Message() {\n    const [points, setPoints] = (0, $2LSrt.useState)((0, $5d0025407b287384$export$2e2bcd8739ae039));\n    function increment() {\n        setPoints(points + 1);\n    }\n    if (points >= 1000) {\n        document.getElementById(\"pick\").style.opacity = 1;\n        document.getElementById(\"pick\").innerHTML = \"\";\n    }\n    return /*#__PURE__*/ (0, $aJa0n.jsxs)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0, $aJa0n.jsx)(\"button\", {\n                id: \"pick\",\n                children: \"1000\"\n            }),\n            /*#__PURE__*/ (0, $aJa0n.jsxs)(\"h5\", {\n                children: [\n                    points,\n                    \" crave points\"\n                ]\n            }),\n            /*#__PURE__*/ (0, $aJa0n.jsx)(\"button\", {\n                id: \"pressable\",\n                onClick: increment\n            })\n        ]\n    });\n}\nconst $af3605b1a17ae057$var$target = document.getElementById('message');\n(0, $1Hdcz.render)(/*#__PURE__*/ (0, $aJa0n.jsx)($af3605b1a17ae057$var$Message, {}), $af3605b1a17ae057$var$target);\n\n\n//# sourceMappingURL=index.d537b129.js.map\n","import React from 'preact';\r\nimport { render } from 'preact';\r\nimport { useState } from 'preact/hooks';\r\nimport cravePoints from './Points';\r\n\r\nfunction Message() {\r\n    const [points, setPoints] = useState(cravePoints);\r\n    function increment() {\r\n        setPoints(points+1);\r\n    };\r\n    if (points>=1000) {\r\n        document.getElementById(\"pick\").style.opacity = 1;\r\n        document.getElementById(\"pick\").innerHTML = \"\";\r\n    \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <button id=\"pick\">1000</button>\r\n            <h5>{points} crave points</h5>\r\n            <button id=\"pressable\" onClick={increment}></button>\r\n        </div>     \r\n    );\r\n}\r\n\r\nconst target = document.getElementById('message');\r\nrender(<Message />, target);\r\n\r\n","const cravePoints = 0;\r\n\r\nexport default cravePoints;\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$aJa0n","$1Hdcz","$2LSrt","$af3605b1a17ae057$var$target","document","getElementById","render","jsx","points","setPoints","useState","style","opacity","innerHTML","jsxs","children","onClick"],"version":3,"file":"index.d537b129.js.map"}